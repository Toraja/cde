---
- name: taskwarrior
  hosts: localhost
  tags: taskwarrior
  tasks:
    - name: Check if taskwarrior is installed
      ansible.builtin.shell: |
        which task
      changed_when: false
      failed_when: false
      register: taskwarrior_installed

    - name: Check if taskwarrior is latest
      when: taskwarrior_installed.rc == 0
      block:
        - name: Get installed taskwarrior version
          ansible.builtin.shell: |
            task --version
          changed_when: false
          register: installed_taskwarrior_version

        - name: Get latest taskwarrior version
          ansible.builtin.shell: |
            curl -s https://api.github.com/repos/GothenburgBitFactory/taskwarrior/releases/latest | jq -r .tag_name
          changed_when: false
          register: latest_taskwarrior_version

        - name: Check if latest is installed
          ansible.builtin.shell: |
            test "v{{ installed_taskwarrior_version.stdout }}" = "{{ latest_taskwarrior_version.stdout }}"
          changed_when: false
          failed_when: false
          register: latest_taskwarrior_is_installed

    - name: install taskwarrior
      vars:
        checkout_path: /tmp/taskwarrior
      block:
        - name: install required packages
          vars:
            apt_packages:
              - make
              - cmake
              - gcc
              - g++
              - uuid-dev
          include_role:
            name: apt

        - name: Git checkout
          ansible.builtin.git:
            repo: https://github.com/GothenburgBitFactory/taskwarrior.git
            dest: "{{ checkout_path }}"
            depth: 1
            single_branch: true
            version: stable

        - name: Build taskwarrior
          ansible.builtin.shell: |
            cmake -DCMAKE_BUILD_TYPE=release -DENABLE_SYNC=OFF .
            make
          args:
            chdir: "{{ checkout_path }}"

        - name: Install taskwarrior
          become: true
          ansible.builtin.shell: |
            make install
          args:
            chdir: "{{ checkout_path }}"

        - name: Remove git repository
          file:
            state: absent
            path: "{{ checkout_path }}"
      when: not (taskwarrior_installed.rc == 0 and latest_taskwarrior_is_installed.rc == 0)

    - name: Setup taskrc
      vars:
        taskrc_path: "{{ lookup('ansible.builtin.env', 'HOME') }}/.config/taskwarrior/taskrc"
      block:
        - name: Check if taskrc exists
          ansible.builtin.stat:
            path: "{{ taskrc_path }}"
          register: taskrc
        - name: Copy taskrc
          ansible.builtin.shell: |
            mkdir -p $(dirname {{ taskrc_path }})
            cp ../taskrc {{ taskrc_path }}
          when: not taskrc.stat.exists

- name: taskwarrior-tui
  hosts: localhost
  tags: taskwarrior-tui
  vars:
    download_path: /tmp/taskwarrior-tui.tar.gz
  tasks:
    - name: Check if taskwarrior-tui is installed
      ansible.builtin.shell: |
        which taskwarrior-tui
      changed_when: false
      failed_when: false
      register: taskwarrior_tui_installed

    - name: Check if taskwarrior is latest
      when: taskwarrior_tui_installed.rc == 0
      block:
        - name: Get installed taskwarrior-tui version
          ansible.builtin.shell: |
            taskwarrior-tui --version | awk '{print $2}'
          changed_when: false
          register: installed_taskwarrior_tui_version

        - name: Get latest taskwarrior-tui version
          ansible.builtin.shell: |
            curl -s https://api.github.com/repos/kdheepak/taskwarrior-tui/releases/latest | jq -r .tag_name
          changed_when: false
          register: latest_taskwarrior_tui_version

        - name: Check if latest is installed
          ansible.builtin.shell: |
            test "v{{ installed_taskwarrior_tui_version.stdout }}" = "{{ latest_taskwarrior_tui_version.stdout }}"
          changed_when: false
          failed_when: false
          register: latest_taskwarrior_tui_is_installed

    - name: install taskwarrior-tui
      become: true
      when: not (taskwarrior_tui_installed.rc == 0 and latest_taskwarrior_tui_is_installed.rc == 0)
      block:
        - name: Install taskwarrior-tui
          ansible.builtin.shell: |
            ../github-latest-release-installer.sh kdheepak taskwarrior-tui taskwarrior-tui-x86_64-unknown-linux-gnu.tar.gz "{{ download_path }}"
            tar -xzf "{{ download_path }}" --directory=/usr/local/bin
            rm "{{ download_path }}"

- name: taskopen
  hosts: localhost
  tags: taskopen
  vars:
    binary: taskopen
    installed_version_cmd: taskopen version | sed 's/^v//'
    latest_version_cmd: |
      git ls-remote --tags --refs https://github.com/jschlatow/taskopen.git |
      awk '{ print $2 }' |
      grep '^refs/tags/.*' |
      sed 's/^refs\/tags\///' |
      sed 's/^v//' |
      awk '{ if ($1 ~ /-/) print; else print $0"_" ; }' |
      sort -V |
      sed 's/_$//' |
      tail --lines 1
  tasks:
    - name: Check if binary is installed
      ansible.builtin.shell: |
        which {{ binary }}
      changed_when: false
      failed_when: false
      register: binary_installed

    - name: Get latest version
      ansible.builtin.shell: "{{ latest_version_cmd }}"
      changed_when: false
      register: latest_version

    - name: Check if latest is installed
      when: binary_installed.rc == 0
      block:
        - name: Get installed version
          ansible.builtin.shell: "{{ installed_version_cmd }}"
          changed_when: false
          register: installed_version

        - name: Check if latest is installed
          ansible.builtin.shell: |
            test "{{ installed_version.stdout }}" = "{{ latest_version.stdout }}"
          changed_when: false
          failed_when: false
          register: latest_version_is_installed

    - name: Install binary
      when: not (binary_installed.rc == 0 and latest_version_is_installed.rc == 0)
      vars:
        install_prefix: /usr/local
      ansible.builtin.shell: |
        docker run --rm -v {{ install_prefix }}/bin:/dst nimlang/nim \
          bash -c 'apt-get update &&
            apt-get install --yes make &&
            git clone --depth 1 --branch v{{ latest_version.stdout }} https://github.com/jschlatow/taskopen.git &&
            cd taskopen &&
            make PREFIX={{ install_prefix }} &&
            mv taskopen /dst'

    - name: Setup
      ansible.builtin.shell:
        cmd: |
          mkdir -p $HOME/.config/taskopen/
          ln -s $HOME/toybox/taskwarrior/taskopenrc $HOME/.config/taskopen/taskopenrc
        creates: $HOME/.config/taskopen/taskopenrc
