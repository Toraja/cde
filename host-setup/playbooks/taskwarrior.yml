---
- name: taskwarrior
  hosts: localhost
  tags: taskwarrior
  tasks:
    - name: Check if latest taskwarrior is installed
      vars:
        binary_name: task
        installed_version_cmd: task --version
        latest_version_cmd: curl -s https://api.github.com/repos/GothenburgBitFactory/taskwarrior/releases/latest | jq -r .tag_name | cut -c 2-
      include_role:
        name: binary
        tasks_from: latest_is_installed

    - name: install taskwarrior
      when: not latest_binary_is_installed
      vars:
        checkout_path: /tmp/taskwarrior
      block:
        - name: install required packages
          vars:
            apt_packages:
              - make
              - cmake
              - gcc
              - g++
              - uuid-dev
          include_role:
            name: apt

        - name: Git checkout
          ansible.builtin.git:
            repo: https://github.com/GothenburgBitFactory/taskwarrior.git
            dest: "{{ checkout_path }}"
            depth: 1
            single_branch: true
            version: stable

        - name: Build taskwarrior
          ansible.builtin.shell: |
            cmake -DCMAKE_BUILD_TYPE=release -DENABLE_SYNC=OFF .
            make
          args:
            chdir: "{{ checkout_path }}"

        - name: Install taskwarrior
          become: true
          ansible.builtin.shell: |
            make install
          args:
            chdir: "{{ checkout_path }}"

        - name: Remove git repository
          file:
            state: absent
            path: "{{ checkout_path }}"

    - name: Setup taskrc
      vars:
        taskrc_path: "{{ lookup('ansible.builtin.env', 'HOME') }}/.config/taskwarrior/taskrc"
      ansible.builtin.shell:
        cmd: |
          mkdir -p $(dirname {{ taskrc_path }})
          cp ../taskrc {{ taskrc_path }}
        creates: "{{ taskrc_path }}"

- name: taskwarrior-tui
  hosts: localhost
  tags: taskwarrior-tui
  tasks:
    - name: Check if latest taskwarrior is installed
      vars:
        binary_name: taskwarrior-tui
        installed_version_cmd: taskwarrior-tui --version | awk '{print $2}'
        latest_version_cmd: curl -s https://api.github.com/repos/kdheepak/taskwarrior-tui/releases/latest | jq -r .tag_name | cut -c 2-
      include_role:
        name: binary
        tasks_from: latest_is_installed

    - name: install taskwarrior-tui
      when: not latest_binary_is_installed
      become: true
      block:
        - name: Install taskwarrior-tui
          ansible.builtin.shell: |
            ../github-latest-release-installer.sh -t kdheepak taskwarrior-tui taskwarrior-tui-x86_64-unknown-linux-gnu.tar.gz /usr/local/bin

- name: taskopen
  hosts: localhost
  tags: taskopen
  tasks:
    - name: Check if latest taskopen is installed
      vars:
        binary_name: taskopen
        installed_version_cmd: taskopen version | cut -c 2-
        latest_version_cmd: |
          git ls-remote --tags --refs https://github.com/jschlatow/taskopen.git |
          awk '{ print $2 }' |
          grep '^refs/tags/.*' |
          sed 's/^refs\/tags\///' |
          sed 's/^v//' |
          awk '{ if ($1 ~ /-/) print; else print $0"_" ; }' |
          sort -V |
          sed 's/_$//' |
          tail --lines 1
      include_role:
        name: binary
        tasks_from: latest_is_installed

    - name: Install taskopen
      when: not latest_binary_is_installed
      vars:
        install_prefix: /usr/local
      ansible.builtin.shell: |
        docker run --rm -v {{ install_prefix }}/bin:/dst nimlang/nim \
          bash -c 'apt-get update &&
            apt-get install --yes make &&
            git clone --depth 1 --branch v{{ latest_version.stdout }} https://github.com/jschlatow/taskopen.git &&
            cd taskopen &&
            make PREFIX={{ install_prefix }} &&
            mv taskopen /dst'

    - name: Setup taskopenrc
      vars:
        taskopenrc_path: "{{ lookup('ansible.builtin.env', 'HOME') }}/.config/taskopen/taskopenrc"
      ansible.builtin.shell:
        cmd: |
          mkdir -p $(dirname {{ taskopenrc_path }})
          ln -s $HOME/toybox/taskwarrior/taskopenrc {{ taskopenrc_path }}
        creates: "{{ taskopenrc_path }}"
